"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9005],{3905:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>p,MDXProvider:()=>u,mdx:()=>_,useMDXComponents:()=>s,withMDXComponents:()=>c});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(){return l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},l.apply(this,arguments)}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function d(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){return function(t){var n=s(t.components);return r.createElement(e,l({},t,{components:n}))}},s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):d(d({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},m="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=s(n),u=a,m=c["".concat(o,".").concat(u)]||c[u]||y[u]||l;return n?r.createElement(m,d(d({ref:t},p),{},{components:n})):r.createElement(m,d({ref:t},p))}));function _(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=f;var d={};for(var i in t)hasOwnProperty.call(t,i)&&(d[i]=t[i]);d.originalType=e,d[m]="string"==typeof e?e:a,o[1]=d;for(var p=2;p<l;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},65694:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>s,frontMatter:()=>l,metadata:()=>d,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const l={},o="ctx.actions",d={unversionedId:"generated/native/ctx.actions",id:"generated/native/ctx.actions",title:"ctx.actions",description:"anon_target",source:"@site/../docs/generated/native/ctx.actions.md",sourceDirName:"generated/native",slug:"/generated/native/ctx.actions",permalink:"/docs/generated/native/ctx.actions",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"manualSidebar",previous:{title:"cmd_args",permalink:"/docs/generated/native/cmd_args"},next:{title:"ctx",permalink:"/docs/generated/native/ctx"}},i={},p=[{value:"anon_target",id:"anon_target",level:2},{value:"anon_targets",id:"anon_targets",level:2},{value:"artifact_tag",id:"artifact_tag",level:2},{value:"cas_artifact",id:"cas_artifact",level:2},{value:"copied_dir",id:"copied_dir",level:2},{value:"copy_dir",id:"copy_dir",level:2},{value:"copy_file",id:"copy_file",level:2},{value:"declare_output",id:"declare_output",level:2},{value:"download_file",id:"download_file",level:2},{value:"dynamic_output",id:"dynamic_output",level:2},{value:"run",id:"run",level:2},{value:"symlink_dir",id:"symlink_dir",level:2},{value:"symlink_file",id:"symlink_file",level:2},{value:"symlinked_dir",id:"symlinked_dir",level:2},{value:"tset",id:"tset",level:2},{value:"write",id:"write",level:2},{value:"write_json",id:"write_json",level:2}],c={toc:p};function s(e){let{components:t,...n}=e;return(0,a.mdx)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"ctxactions"},"ctx.actions"),(0,a.mdx)("h2",{id:"anon_target"},"anon_target"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def anon_target(rule: "rule", attrs: {str.type: ""}) -> "promise"\n')),(0,a.mdx)("p",null,"Generate an anonymous target"),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"anon_targets"},"anon_targets"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def anon_targets(rules: [("rule", {str.type: ""})]) -> "promise"\n')),(0,a.mdx)("p",null,"Generate a series of anonymous targets"),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"artifact_tag"},"artifact_tag"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def artifact_tag() -> ""\n')),(0,a.mdx)("p",null,"Allocate a new input tag"),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"cas_artifact"},"cas_artifact"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def cas_artifact(\n    output: "",\n  digest: str.type,\n  use_case: str.type,\n  *,\n  expires_after_timestamp: int.type,\n  is_executable: bool.type = None,\n  is_tree: bool.type = None,\n  is_directory: bool.type = None\n) -> ""\n')),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"copied_dir"},"copied_dir"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def copied_dir(output: "", srcs: "") -> ""\n')),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"copy_dir"},"copy_dir"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def copy_dir(dest: "", src: "") -> ""\n')),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"copy_file"},"copy_file"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def copy_file(dest: "", src: "") -> ""\n')),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"declare_output"},"declare_output"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def declare_output(prefix: str.type, filename: [None, str.type] = None, *, dir: bool.type = None) -> "artifact"\n')),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"download_file"},"download_file"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def download_file(\n    output: "",\n  url: str.type,\n  *,\n  sha1: [None, str.type] = None,\n  sha256: [None, str.type] = None,\n  is_executable: bool.type = None,\n  is_deferrable: bool.type = None\n) -> ""\n')),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"dynamic_output"},"dynamic_output"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def dynamic_output(*, dynamic: ["artifact"], inputs: ["artifact"], outputs: ["output_artifact"], f: "") -> None\n')),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"run"},"run"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def run(\n    arguments: "",\n  *,\n  category: str.type,\n  identifier: [None, str.type] = None,\n  env: [None, {str.type: ""}] = None,\n  local_only: bool.type = None,\n  prefer_local: bool.type = None,\n  always_print_stderr: bool.type = None,\n  weight: [None, int.type] = None,\n  weight_percentage: [None, int.type] = None,\n  dep_files: [None, {str.type: ""}] = None,\n  metadata_env_var: [None, str.type] = None,\n  metadata_path: [None, str.type] = None,\n  no_outputs_cleanup: bool.type = None,\n  allow_cache_upload: bool.type = None,\n  force_full_hybrid_if_capable: bool.type = None\n) -> None\n')),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"symlink_dir"},"symlink_dir"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def symlink_dir(dest: "", src: "") -> ""\n')),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"symlink_file"},"symlink_file"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def symlink_file(dest: "", src: "") -> ""\n')),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"symlinked_dir"},"symlinked_dir"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def symlinked_dir(output: "", srcs: "") -> ""\n')),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"tset"},"tset"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def tset(definition: "", value: [None, ""] = None, children: [None, ""] = None) -> ""\n')),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"write"},"write"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def write(output: "", content: "", *, is_executable: bool.type = None, allow_args: bool.type = None, with_inputs: bool.type = None) -> ""\n')),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"write_json"},"write_json"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def write_json(output: "", content: "", *, with_inputs: bool.type = None) -> ""\n')))}s.isMDXComponent=!0}}]);