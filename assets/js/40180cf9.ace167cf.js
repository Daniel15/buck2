"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5328],{3905:(e,t,r)=>{r.r(t),r.d(t,{MDXContext:()=>f,MDXProvider:()=>p,mdx:()=>g,useMDXComponents:()=>s,withMDXComponents:()=>u});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},a.apply(this,arguments)}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var f=n.createContext({}),u=function(e){return function(t){var r=s(t.components);return n.createElement(e,a({},t,{components:r}))}},s=function(e){var t=n.useContext(f),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(f.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},v=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,f=c(e,["components","mdxType","originalType","parentName"]),u=s(r),p=o,d=u["".concat(i,".").concat(p)]||u[p]||m[p]||a;return r?n.createElement(d,l(l({ref:t},f),{},{components:r})):n.createElement(d,l({ref:t},f))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=v;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[d]="string"==typeof e?e:o,i[1]=l;for(var f=2;f<a;f++)i[f]=r[f];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}v.displayName="MDXCreateElement"},58739:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>s,frontMatter:()=>a,metadata:()=>l,toc:()=>f});var n=r(87462),o=(r(67294),r(3905));const a={},i="ExecutionPlatformRegistrationInfo",l={unversionedId:"generated/native/providers/ExecutionPlatformRegistrationInfo",id:"generated/native/providers/ExecutionPlatformRegistrationInfo",title:"ExecutionPlatformRegistrationInfo",description:"Provider that gives the list of all execution platforms available for this build.",source:"@site/../docs/generated/native/providers/ExecutionPlatformRegistrationInfo.md",sourceDirName:"generated/native/providers",slug:"/generated/native/providers/ExecutionPlatformRegistrationInfo",permalink:"/docs/generated/native/providers/ExecutionPlatformRegistrationInfo",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"manualSidebar",previous:{title:"ExecutionPlatformInfo",permalink:"/docs/generated/native/providers/ExecutionPlatformInfo"},next:{title:"ExternalRunnerTestInfo",permalink:"/docs/generated/native/providers/ExternalRunnerTestInfo"}},c={},f=[{value:"fallback : <code>UNKNOWN</code>",id:"fallback--unknown",level:2},{value:"platforms : <code>[&quot;ExecutionPlatformInfo&quot;]</code>",id:"platforms--executionplatforminfo",level:2}],u={toc:f};function s(e){let{components:t,...r}=e;return(0,o.mdx)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"executionplatformregistrationinfo"},"ExecutionPlatformRegistrationInfo"),(0,o.mdx)("p",null,"Provider that gives the list of all execution platforms available for this build."),(0,o.mdx)("h2",{id:"fallback--unknown"},"fallback : ",(0,o.mdx)("inlineCode",{parentName:"h2"},"UNKNOWN")),(0,o.mdx)("hr",null),(0,o.mdx)("h2",{id:"platforms--executionplatforminfo"},"platforms : ",(0,o.mdx)("inlineCode",{parentName:"h2"},'["ExecutionPlatformInfo"]')))}s.isMDXComponent=!0}}]);